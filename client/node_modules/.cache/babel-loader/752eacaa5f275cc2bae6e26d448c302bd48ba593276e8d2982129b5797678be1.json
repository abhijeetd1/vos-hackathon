{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// redux state\nexport const orderSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    value: [],\n    foodItems: null,\n    drinkItems: null,\n    customItems: null,\n    finalOrder: null,\n    nextAudioNew: null,\n    totalCost: null\n  },\n  reducers: {\n    addPrompt: (state, action) => {\n      state.value.unshift(action.payload);\n    },\n    clearPrompts: state => {\n      state.value = [];\n    },\n    updatePrompt: (state, action) => {\n      const index = state.value.findIndex(item => item.prompt === action.payload.prompt);\n\n      // If the prompt is found, update the fulfillmentText\n      if (index !== -1) {\n        state.value[index].fulfillmentText = action.payload.fulfillmentText;\n      }\n    },\n    setFoodItems: (state, action) => {\n      state.foodItems = action.payload;\n    },\n    setDrinkItems: (state, action) => {\n      state.drinkItems = action.payload;\n    },\n    setTotalCost: (state, action) => {\n      state.totalCost = action.payload;\n    },\n    setCustomizationItems: (state, action) => {\n      state.customItems = action.payload;\n    },\n    setFinalOrder: (state, action) => {\n      state.finalOrder = action.payload;\n    },\n    setNextAudioNew: (state, action) => {\n      state.nextAudioNew = action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addPrompt,\n  setTotalCost,\n  setNextAudioNew,\n  clearPrompts,\n  setDrinkItems,\n  setFoodItems,\n  setCustomizationItems,\n  updatePrompt,\n  setFinalOrder\n} = orderSlice.actions;\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","orderSlice","name","initialState","value","foodItems","drinkItems","customItems","finalOrder","nextAudioNew","totalCost","reducers","addPrompt","state","action","unshift","payload","clearPrompts","updatePrompt","index","findIndex","item","prompt","fulfillmentText","setFoodItems","setDrinkItems","setTotalCost","setCustomizationItems","setFinalOrder","setNextAudioNew","actions","reducer"],"sources":["/Users/abhijeet/MyProjects/th-hackathon-main/client/src/slices/orders.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\n// redux state\nexport const orderSlice = createSlice({\n  name: 'orders',\n  initialState: {\n    value: [], \n    foodItems: null,\n    drinkItems: null,\n    customItems: null,\n    finalOrder: null,\n    nextAudioNew: null,\n    totalCost: null,\n  },\n  reducers: {\n    addPrompt: (state, action) => {\n      state.value.unshift(action.payload)\n    },\n    clearPrompts: (state) => {\n      state.value = []\n    },\n    updatePrompt: (state, action) => {\n      const index = state.value.findIndex(item => item.prompt === action.payload.prompt);\n\n      // If the prompt is found, update the fulfillmentText\n      if (index !== -1) {\n        state.value[index].fulfillmentText = action.payload.fulfillmentText;\n      }\n    },\n    setFoodItems: (state, action) => {\n      state.foodItems = action.payload; \n    },\n    setDrinkItems: (state, action) => {\n      state.drinkItems = action.payload; \n    },\n    setTotalCost: (state, action) => {\n      state.totalCost = action.payload; \n    },\n\n    setCustomizationItems: (state, action) => {\n      state.customItems = action.payload;\n    },\n    setFinalOrder: (state, action) => {\n      state.finalOrder = action.payload; \n    },\n    setNextAudioNew: (state, action) => {\n      state.nextAudioNew = action.payload; \n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { addPrompt, setTotalCost, setNextAudioNew, clearPrompts, setDrinkItems, setFoodItems, setCustomizationItems , updatePrompt, setFinalOrder} = orderSlice.actions\n\nexport default orderSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,IAAI;IAChBC,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACT,KAAK,CAACW,OAAO,CAACD,MAAM,CAACE,OAAO,CAAC;IACrC,CAAC;IACDC,YAAY,EAAGJ,KAAK,IAAK;MACvBA,KAAK,CAACT,KAAK,GAAG,EAAE;IAClB,CAAC;IACDc,YAAY,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAMK,KAAK,GAAGN,KAAK,CAACT,KAAK,CAACgB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKR,MAAM,CAACE,OAAO,CAACM,MAAM,CAAC;;MAElF;MACA,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBN,KAAK,CAACT,KAAK,CAACe,KAAK,CAAC,CAACI,eAAe,GAAGT,MAAM,CAACE,OAAO,CAACO,eAAe;MACrE;IACF,CAAC;IACDC,YAAY,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACR,SAAS,GAAGS,MAAM,CAACE,OAAO;IAClC,CAAC;IACDS,aAAa,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACP,UAAU,GAAGQ,MAAM,CAACE,OAAO;IACnC,CAAC;IACDU,YAAY,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACH,SAAS,GAAGI,MAAM,CAACE,OAAO;IAClC,CAAC;IAEDW,qBAAqB,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MACxCD,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACE,OAAO;IACpC,CAAC;IACDY,aAAa,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACE,OAAO;IACnC,CAAC;IACDa,eAAe,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACJ,YAAY,GAAGK,MAAM,CAACE,OAAO;IACrC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEJ,SAAS;EAAEc,YAAY;EAAEG,eAAe;EAAEZ,YAAY;EAAEQ,aAAa;EAAED,YAAY;EAAEG,qBAAqB;EAAGT,YAAY;EAAEU;AAAa,CAAC,GAAG3B,UAAU,CAAC6B,OAAO;AAE7K,eAAe7B,UAAU,CAAC8B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}